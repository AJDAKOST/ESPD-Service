//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.11 at 11:41:57 AM CET 
//


package isa.names.specification.ubl.schema.xsd.ccv_commonaggregatecomponents_1;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.DescriptionType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.IDType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.NameType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.TypeCodeType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for CriterionType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CriterionType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionID" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionTypeCode" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionName" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionDescription" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonAggregateComponents-1}CriterionRegulationReference" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonAggregateComponents-1}ContextualDependency" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonAggregateComponents-1}CriterionRequirement" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonAggregateComponents-1}CriterionResponse" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CriterionType", propOrder = {
    "criterionID",
    "criterionTypeCode",
    "criterionName",
    "criterionDescription",
    "criterionRegulationReference",
    "contextualDependency",
    "criterionRequirement",
    "criterionResponse"
})
public class CriterionType
    implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 100L;
    @XmlElement(name = "CriterionID", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected IDType criterionID;
    @XmlElement(name = "CriterionTypeCode", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected TypeCodeType criterionTypeCode;
    @XmlElement(name = "CriterionName", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected NameType criterionName;
    @XmlElement(name = "CriterionDescription", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected DescriptionType criterionDescription;
    @XmlElement(name = "CriterionRegulationReference")
    protected List<RegulationType> criterionRegulationReference;
    @XmlElement(name = "ContextualDependency")
    protected List<ContextualDependencyType> contextualDependency;
    @XmlElement(name = "CriterionRequirement")
    protected List<CriterionRequirementType> criterionRequirement;
    @XmlElement(name = "CriterionResponse")
    protected List<CriterionResponseType> criterionResponse;

    /**
     * Gets the value of the criterionID property.
     * 
     * @return
     *     possible object is
     *     {@link IDType }
     *     
     */
    public IDType getCriterionID() {
        return criterionID;
    }

    /**
     * Sets the value of the criterionID property.
     * 
     * @param value
     *     allowed object is
     *     {@link IDType }
     *     
     */
    public void setCriterionID(IDType value) {
        this.criterionID = value;
    }

    /**
     * Gets the value of the criterionTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link TypeCodeType }
     *     
     */
    public TypeCodeType getCriterionTypeCode() {
        return criterionTypeCode;
    }

    /**
     * Sets the value of the criterionTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypeCodeType }
     *     
     */
    public void setCriterionTypeCode(TypeCodeType value) {
        this.criterionTypeCode = value;
    }

    /**
     * Gets the value of the criterionName property.
     * 
     * @return
     *     possible object is
     *     {@link NameType }
     *     
     */
    public NameType getCriterionName() {
        return criterionName;
    }

    /**
     * Sets the value of the criterionName property.
     * 
     * @param value
     *     allowed object is
     *     {@link NameType }
     *     
     */
    public void setCriterionName(NameType value) {
        this.criterionName = value;
    }

    /**
     * Gets the value of the criterionDescription property.
     * 
     * @return
     *     possible object is
     *     {@link DescriptionType }
     *     
     */
    public DescriptionType getCriterionDescription() {
        return criterionDescription;
    }

    /**
     * Sets the value of the criterionDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link DescriptionType }
     *     
     */
    public void setCriterionDescription(DescriptionType value) {
        this.criterionDescription = value;
    }

    /**
     * Gets the value of the criterionRegulationReference property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the criterionRegulationReference property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCriterionRegulationReference().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RegulationType }
     * 
     * 
     */
    public List<RegulationType> getCriterionRegulationReference() {
        if (criterionRegulationReference == null) {
            criterionRegulationReference = new ArrayList<RegulationType>();
        }
        return this.criterionRegulationReference;
    }

    /**
     * Gets the value of the contextualDependency property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the contextualDependency property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContextualDependency().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ContextualDependencyType }
     * 
     * 
     */
    public List<ContextualDependencyType> getContextualDependency() {
        if (contextualDependency == null) {
            contextualDependency = new ArrayList<ContextualDependencyType>();
        }
        return this.contextualDependency;
    }

    /**
     * Gets the value of the criterionRequirement property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the criterionRequirement property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCriterionRequirement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CriterionRequirementType }
     * 
     * 
     */
    public List<CriterionRequirementType> getCriterionRequirement() {
        if (criterionRequirement == null) {
            criterionRequirement = new ArrayList<CriterionRequirementType>();
        }
        return this.criterionRequirement;
    }

    /**
     * Gets the value of the criterionResponse property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the criterionResponse property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCriterionResponse().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CriterionResponseType }
     * 
     * 
     */
    public List<CriterionResponseType> getCriterionResponse() {
        if (criterionResponse == null) {
            criterionResponse = new ArrayList<CriterionResponseType>();
        }
        return this.criterionResponse;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            IDType theCriterionID;
            theCriterionID = this.getCriterionID();
            strategy.appendField(locator, this, "criterionID", buffer, theCriterionID);
        }
        {
            TypeCodeType theCriterionTypeCode;
            theCriterionTypeCode = this.getCriterionTypeCode();
            strategy.appendField(locator, this, "criterionTypeCode", buffer, theCriterionTypeCode);
        }
        {
            NameType theCriterionName;
            theCriterionName = this.getCriterionName();
            strategy.appendField(locator, this, "criterionName", buffer, theCriterionName);
        }
        {
            DescriptionType theCriterionDescription;
            theCriterionDescription = this.getCriterionDescription();
            strategy.appendField(locator, this, "criterionDescription", buffer, theCriterionDescription);
        }
        {
            List<RegulationType> theCriterionRegulationReference;
            theCriterionRegulationReference = (((this.criterionRegulationReference!= null)&&(!this.criterionRegulationReference.isEmpty()))?this.getCriterionRegulationReference():null);
            strategy.appendField(locator, this, "criterionRegulationReference", buffer, theCriterionRegulationReference);
        }
        {
            List<ContextualDependencyType> theContextualDependency;
            theContextualDependency = (((this.contextualDependency!= null)&&(!this.contextualDependency.isEmpty()))?this.getContextualDependency():null);
            strategy.appendField(locator, this, "contextualDependency", buffer, theContextualDependency);
        }
        {
            List<CriterionRequirementType> theCriterionRequirement;
            theCriterionRequirement = (((this.criterionRequirement!= null)&&(!this.criterionRequirement.isEmpty()))?this.getCriterionRequirement():null);
            strategy.appendField(locator, this, "criterionRequirement", buffer, theCriterionRequirement);
        }
        {
            List<CriterionResponseType> theCriterionResponse;
            theCriterionResponse = (((this.criterionResponse!= null)&&(!this.criterionResponse.isEmpty()))?this.getCriterionResponse():null);
            strategy.appendField(locator, this, "criterionResponse", buffer, theCriterionResponse);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CriterionType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CriterionType that = ((CriterionType) object);
        {
            IDType lhsCriterionID;
            lhsCriterionID = this.getCriterionID();
            IDType rhsCriterionID;
            rhsCriterionID = that.getCriterionID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionID", lhsCriterionID), LocatorUtils.property(thatLocator, "criterionID", rhsCriterionID), lhsCriterionID, rhsCriterionID)) {
                return false;
            }
        }
        {
            TypeCodeType lhsCriterionTypeCode;
            lhsCriterionTypeCode = this.getCriterionTypeCode();
            TypeCodeType rhsCriterionTypeCode;
            rhsCriterionTypeCode = that.getCriterionTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionTypeCode", lhsCriterionTypeCode), LocatorUtils.property(thatLocator, "criterionTypeCode", rhsCriterionTypeCode), lhsCriterionTypeCode, rhsCriterionTypeCode)) {
                return false;
            }
        }
        {
            NameType lhsCriterionName;
            lhsCriterionName = this.getCriterionName();
            NameType rhsCriterionName;
            rhsCriterionName = that.getCriterionName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionName", lhsCriterionName), LocatorUtils.property(thatLocator, "criterionName", rhsCriterionName), lhsCriterionName, rhsCriterionName)) {
                return false;
            }
        }
        {
            DescriptionType lhsCriterionDescription;
            lhsCriterionDescription = this.getCriterionDescription();
            DescriptionType rhsCriterionDescription;
            rhsCriterionDescription = that.getCriterionDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionDescription", lhsCriterionDescription), LocatorUtils.property(thatLocator, "criterionDescription", rhsCriterionDescription), lhsCriterionDescription, rhsCriterionDescription)) {
                return false;
            }
        }
        {
            List<RegulationType> lhsCriterionRegulationReference;
            lhsCriterionRegulationReference = (((this.criterionRegulationReference!= null)&&(!this.criterionRegulationReference.isEmpty()))?this.getCriterionRegulationReference():null);
            List<RegulationType> rhsCriterionRegulationReference;
            rhsCriterionRegulationReference = (((that.criterionRegulationReference!= null)&&(!that.criterionRegulationReference.isEmpty()))?that.getCriterionRegulationReference():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionRegulationReference", lhsCriterionRegulationReference), LocatorUtils.property(thatLocator, "criterionRegulationReference", rhsCriterionRegulationReference), lhsCriterionRegulationReference, rhsCriterionRegulationReference)) {
                return false;
            }
        }
        {
            List<ContextualDependencyType> lhsContextualDependency;
            lhsContextualDependency = (((this.contextualDependency!= null)&&(!this.contextualDependency.isEmpty()))?this.getContextualDependency():null);
            List<ContextualDependencyType> rhsContextualDependency;
            rhsContextualDependency = (((that.contextualDependency!= null)&&(!that.contextualDependency.isEmpty()))?that.getContextualDependency():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contextualDependency", lhsContextualDependency), LocatorUtils.property(thatLocator, "contextualDependency", rhsContextualDependency), lhsContextualDependency, rhsContextualDependency)) {
                return false;
            }
        }
        {
            List<CriterionRequirementType> lhsCriterionRequirement;
            lhsCriterionRequirement = (((this.criterionRequirement!= null)&&(!this.criterionRequirement.isEmpty()))?this.getCriterionRequirement():null);
            List<CriterionRequirementType> rhsCriterionRequirement;
            rhsCriterionRequirement = (((that.criterionRequirement!= null)&&(!that.criterionRequirement.isEmpty()))?that.getCriterionRequirement():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionRequirement", lhsCriterionRequirement), LocatorUtils.property(thatLocator, "criterionRequirement", rhsCriterionRequirement), lhsCriterionRequirement, rhsCriterionRequirement)) {
                return false;
            }
        }
        {
            List<CriterionResponseType> lhsCriterionResponse;
            lhsCriterionResponse = (((this.criterionResponse!= null)&&(!this.criterionResponse.isEmpty()))?this.getCriterionResponse():null);
            List<CriterionResponseType> rhsCriterionResponse;
            rhsCriterionResponse = (((that.criterionResponse!= null)&&(!that.criterionResponse.isEmpty()))?that.getCriterionResponse():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionResponse", lhsCriterionResponse), LocatorUtils.property(thatLocator, "criterionResponse", rhsCriterionResponse), lhsCriterionResponse, rhsCriterionResponse)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            IDType theCriterionID;
            theCriterionID = this.getCriterionID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionID", theCriterionID), currentHashCode, theCriterionID);
        }
        {
            TypeCodeType theCriterionTypeCode;
            theCriterionTypeCode = this.getCriterionTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionTypeCode", theCriterionTypeCode), currentHashCode, theCriterionTypeCode);
        }
        {
            NameType theCriterionName;
            theCriterionName = this.getCriterionName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionName", theCriterionName), currentHashCode, theCriterionName);
        }
        {
            DescriptionType theCriterionDescription;
            theCriterionDescription = this.getCriterionDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionDescription", theCriterionDescription), currentHashCode, theCriterionDescription);
        }
        {
            List<RegulationType> theCriterionRegulationReference;
            theCriterionRegulationReference = (((this.criterionRegulationReference!= null)&&(!this.criterionRegulationReference.isEmpty()))?this.getCriterionRegulationReference():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionRegulationReference", theCriterionRegulationReference), currentHashCode, theCriterionRegulationReference);
        }
        {
            List<ContextualDependencyType> theContextualDependency;
            theContextualDependency = (((this.contextualDependency!= null)&&(!this.contextualDependency.isEmpty()))?this.getContextualDependency():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contextualDependency", theContextualDependency), currentHashCode, theContextualDependency);
        }
        {
            List<CriterionRequirementType> theCriterionRequirement;
            theCriterionRequirement = (((this.criterionRequirement!= null)&&(!this.criterionRequirement.isEmpty()))?this.getCriterionRequirement():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionRequirement", theCriterionRequirement), currentHashCode, theCriterionRequirement);
        }
        {
            List<CriterionResponseType> theCriterionResponse;
            theCriterionResponse = (((this.criterionResponse!= null)&&(!this.criterionResponse.isEmpty()))?this.getCriterionResponse():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionResponse", theCriterionResponse), currentHashCode, theCriterionResponse);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
