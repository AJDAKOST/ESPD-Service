//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.11 at 11:41:57 AM CET 
//


package isa.names.specification.ubl.schema.xsd.ccv_commonaggregatecomponents_1;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import isa.names.specification.ubl.schema.xsd.ccv_commonbasiccomponents_1.IndicatorType;
import isa.names.specification.ubl.schema.xsd.cev_commonaggregatecomponents_1.EvidenceType;
import oasis.names.specification.ubl.schema.xsd.commonaggregatecomponents_2.LocationType;
import oasis.names.specification.ubl.schema.xsd.commonaggregatecomponents_2.PartyType;
import oasis.names.specification.ubl.schema.xsd.commonaggregatecomponents_2.PeriodType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.AmountType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.DescriptionType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.IDType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.PercentType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.QuantityType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.TextType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for CriterionResponseType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CriterionResponseType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionResponseID" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionResponseDescription" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionFulfillmentIndicator"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionFulfillmentMotivation" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionFulfillmentAmount" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionFulfillmentQuantity" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionFulfillmentPercent" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionFulfillmentDescription" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonAggregateComponents-1}ProposedCriterionEvidence" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonAggregateComponents-1}CriterionFulfillmentPeriod" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonAggregateComponents-1}CriterionFulfillmentEventLocation" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonAggregateComponents-1}CriterionFulfillmentAffectedParty" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CriterionResponseType", propOrder = {
    "criterionResponseID",
    "criterionResponseDescription",
    "criterionFulfillmentIndicator",
    "criterionFulfillmentMotivation",
    "criterionFulfillmentAmount",
    "criterionFulfillmentQuantity",
    "criterionFulfillmentPercent",
    "criterionFulfillmentDescription",
    "proposedCriterionEvidence",
    "criterionFulfillmentPeriod",
    "criterionFulfillmentEventLocation",
    "criterionFulfillmentAffectedParty"
})
public class CriterionResponseType
    implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 100L;
    @XmlElement(name = "CriterionResponseID", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected IDType criterionResponseID;
    @XmlElement(name = "CriterionResponseDescription", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected DescriptionType criterionResponseDescription;
    @XmlElement(name = "CriterionFulfillmentIndicator", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1", required = true)
    protected IndicatorType criterionFulfillmentIndicator;
    @XmlElement(name = "CriterionFulfillmentMotivation", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected TextType criterionFulfillmentMotivation;
    @XmlElement(name = "CriterionFulfillmentAmount", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected AmountType criterionFulfillmentAmount;
    @XmlElement(name = "CriterionFulfillmentQuantity", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected QuantityType criterionFulfillmentQuantity;
    @XmlElement(name = "CriterionFulfillmentPercent", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected PercentType criterionFulfillmentPercent;
    @XmlElement(name = "CriterionFulfillmentDescription", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected DescriptionType criterionFulfillmentDescription;
    @XmlElement(name = "ProposedCriterionEvidence")
    protected List<EvidenceType> proposedCriterionEvidence;
    @XmlElement(name = "CriterionFulfillmentPeriod")
    protected PeriodType criterionFulfillmentPeriod;
    @XmlElement(name = "CriterionFulfillmentEventLocation")
    protected List<LocationType> criterionFulfillmentEventLocation;
    @XmlElement(name = "CriterionFulfillmentAffectedParty")
    protected List<PartyType> criterionFulfillmentAffectedParty;

    /**
     * Gets the value of the criterionResponseID property.
     * 
     * @return
     *     possible object is
     *     {@link IDType }
     *     
     */
    public IDType getCriterionResponseID() {
        return criterionResponseID;
    }

    /**
     * Sets the value of the criterionResponseID property.
     * 
     * @param value
     *     allowed object is
     *     {@link IDType }
     *     
     */
    public void setCriterionResponseID(IDType value) {
        this.criterionResponseID = value;
    }

    /**
     * Gets the value of the criterionResponseDescription property.
     * 
     * @return
     *     possible object is
     *     {@link DescriptionType }
     *     
     */
    public DescriptionType getCriterionResponseDescription() {
        return criterionResponseDescription;
    }

    /**
     * Sets the value of the criterionResponseDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link DescriptionType }
     *     
     */
    public void setCriterionResponseDescription(DescriptionType value) {
        this.criterionResponseDescription = value;
    }

    /**
     * Gets the value of the criterionFulfillmentIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link IndicatorType }
     *     
     */
    public IndicatorType getCriterionFulfillmentIndicator() {
        return criterionFulfillmentIndicator;
    }

    /**
     * Sets the value of the criterionFulfillmentIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link IndicatorType }
     *     
     */
    public void setCriterionFulfillmentIndicator(IndicatorType value) {
        this.criterionFulfillmentIndicator = value;
    }

    /**
     * Gets the value of the criterionFulfillmentMotivation property.
     * 
     * @return
     *     possible object is
     *     {@link TextType }
     *     
     */
    public TextType getCriterionFulfillmentMotivation() {
        return criterionFulfillmentMotivation;
    }

    /**
     * Sets the value of the criterionFulfillmentMotivation property.
     * 
     * @param value
     *     allowed object is
     *     {@link TextType }
     *     
     */
    public void setCriterionFulfillmentMotivation(TextType value) {
        this.criterionFulfillmentMotivation = value;
    }

    /**
     * Gets the value of the criterionFulfillmentAmount property.
     * 
     * @return
     *     possible object is
     *     {@link AmountType }
     *     
     */
    public AmountType getCriterionFulfillmentAmount() {
        return criterionFulfillmentAmount;
    }

    /**
     * Sets the value of the criterionFulfillmentAmount property.
     * 
     * @param value
     *     allowed object is
     *     {@link AmountType }
     *     
     */
    public void setCriterionFulfillmentAmount(AmountType value) {
        this.criterionFulfillmentAmount = value;
    }

    /**
     * Gets the value of the criterionFulfillmentQuantity property.
     * 
     * @return
     *     possible object is
     *     {@link QuantityType }
     *     
     */
    public QuantityType getCriterionFulfillmentQuantity() {
        return criterionFulfillmentQuantity;
    }

    /**
     * Sets the value of the criterionFulfillmentQuantity property.
     * 
     * @param value
     *     allowed object is
     *     {@link QuantityType }
     *     
     */
    public void setCriterionFulfillmentQuantity(QuantityType value) {
        this.criterionFulfillmentQuantity = value;
    }

    /**
     * Gets the value of the criterionFulfillmentPercent property.
     * 
     * @return
     *     possible object is
     *     {@link PercentType }
     *     
     */
    public PercentType getCriterionFulfillmentPercent() {
        return criterionFulfillmentPercent;
    }

    /**
     * Sets the value of the criterionFulfillmentPercent property.
     * 
     * @param value
     *     allowed object is
     *     {@link PercentType }
     *     
     */
    public void setCriterionFulfillmentPercent(PercentType value) {
        this.criterionFulfillmentPercent = value;
    }

    /**
     * Gets the value of the criterionFulfillmentDescription property.
     * 
     * @return
     *     possible object is
     *     {@link DescriptionType }
     *     
     */
    public DescriptionType getCriterionFulfillmentDescription() {
        return criterionFulfillmentDescription;
    }

    /**
     * Sets the value of the criterionFulfillmentDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link DescriptionType }
     *     
     */
    public void setCriterionFulfillmentDescription(DescriptionType value) {
        this.criterionFulfillmentDescription = value;
    }

    /**
     * Gets the value of the proposedCriterionEvidence property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the proposedCriterionEvidence property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProposedCriterionEvidence().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EvidenceType }
     * 
     * 
     */
    public List<EvidenceType> getProposedCriterionEvidence() {
        if (proposedCriterionEvidence == null) {
            proposedCriterionEvidence = new ArrayList<EvidenceType>();
        }
        return this.proposedCriterionEvidence;
    }

    /**
     * Gets the value of the criterionFulfillmentPeriod property.
     * 
     * @return
     *     possible object is
     *     {@link PeriodType }
     *     
     */
    public PeriodType getCriterionFulfillmentPeriod() {
        return criterionFulfillmentPeriod;
    }

    /**
     * Sets the value of the criterionFulfillmentPeriod property.
     * 
     * @param value
     *     allowed object is
     *     {@link PeriodType }
     *     
     */
    public void setCriterionFulfillmentPeriod(PeriodType value) {
        this.criterionFulfillmentPeriod = value;
    }

    /**
     * Gets the value of the criterionFulfillmentEventLocation property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the criterionFulfillmentEventLocation property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCriterionFulfillmentEventLocation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LocationType }
     * 
     * 
     */
    public List<LocationType> getCriterionFulfillmentEventLocation() {
        if (criterionFulfillmentEventLocation == null) {
            criterionFulfillmentEventLocation = new ArrayList<LocationType>();
        }
        return this.criterionFulfillmentEventLocation;
    }

    /**
     * Gets the value of the criterionFulfillmentAffectedParty property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the criterionFulfillmentAffectedParty property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCriterionFulfillmentAffectedParty().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PartyType }
     * 
     * 
     */
    public List<PartyType> getCriterionFulfillmentAffectedParty() {
        if (criterionFulfillmentAffectedParty == null) {
            criterionFulfillmentAffectedParty = new ArrayList<PartyType>();
        }
        return this.criterionFulfillmentAffectedParty;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            IDType theCriterionResponseID;
            theCriterionResponseID = this.getCriterionResponseID();
            strategy.appendField(locator, this, "criterionResponseID", buffer, theCriterionResponseID);
        }
        {
            DescriptionType theCriterionResponseDescription;
            theCriterionResponseDescription = this.getCriterionResponseDescription();
            strategy.appendField(locator, this, "criterionResponseDescription", buffer, theCriterionResponseDescription);
        }
        {
            IndicatorType theCriterionFulfillmentIndicator;
            theCriterionFulfillmentIndicator = this.getCriterionFulfillmentIndicator();
            strategy.appendField(locator, this, "criterionFulfillmentIndicator", buffer, theCriterionFulfillmentIndicator);
        }
        {
            TextType theCriterionFulfillmentMotivation;
            theCriterionFulfillmentMotivation = this.getCriterionFulfillmentMotivation();
            strategy.appendField(locator, this, "criterionFulfillmentMotivation", buffer, theCriterionFulfillmentMotivation);
        }
        {
            AmountType theCriterionFulfillmentAmount;
            theCriterionFulfillmentAmount = this.getCriterionFulfillmentAmount();
            strategy.appendField(locator, this, "criterionFulfillmentAmount", buffer, theCriterionFulfillmentAmount);
        }
        {
            QuantityType theCriterionFulfillmentQuantity;
            theCriterionFulfillmentQuantity = this.getCriterionFulfillmentQuantity();
            strategy.appendField(locator, this, "criterionFulfillmentQuantity", buffer, theCriterionFulfillmentQuantity);
        }
        {
            PercentType theCriterionFulfillmentPercent;
            theCriterionFulfillmentPercent = this.getCriterionFulfillmentPercent();
            strategy.appendField(locator, this, "criterionFulfillmentPercent", buffer, theCriterionFulfillmentPercent);
        }
        {
            DescriptionType theCriterionFulfillmentDescription;
            theCriterionFulfillmentDescription = this.getCriterionFulfillmentDescription();
            strategy.appendField(locator, this, "criterionFulfillmentDescription", buffer, theCriterionFulfillmentDescription);
        }
        {
            List<EvidenceType> theProposedCriterionEvidence;
            theProposedCriterionEvidence = (((this.proposedCriterionEvidence!= null)&&(!this.proposedCriterionEvidence.isEmpty()))?this.getProposedCriterionEvidence():null);
            strategy.appendField(locator, this, "proposedCriterionEvidence", buffer, theProposedCriterionEvidence);
        }
        {
            PeriodType theCriterionFulfillmentPeriod;
            theCriterionFulfillmentPeriod = this.getCriterionFulfillmentPeriod();
            strategy.appendField(locator, this, "criterionFulfillmentPeriod", buffer, theCriterionFulfillmentPeriod);
        }
        {
            List<LocationType> theCriterionFulfillmentEventLocation;
            theCriterionFulfillmentEventLocation = (((this.criterionFulfillmentEventLocation!= null)&&(!this.criterionFulfillmentEventLocation.isEmpty()))?this.getCriterionFulfillmentEventLocation():null);
            strategy.appendField(locator, this, "criterionFulfillmentEventLocation", buffer, theCriterionFulfillmentEventLocation);
        }
        {
            List<PartyType> theCriterionFulfillmentAffectedParty;
            theCriterionFulfillmentAffectedParty = (((this.criterionFulfillmentAffectedParty!= null)&&(!this.criterionFulfillmentAffectedParty.isEmpty()))?this.getCriterionFulfillmentAffectedParty():null);
            strategy.appendField(locator, this, "criterionFulfillmentAffectedParty", buffer, theCriterionFulfillmentAffectedParty);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CriterionResponseType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CriterionResponseType that = ((CriterionResponseType) object);
        {
            IDType lhsCriterionResponseID;
            lhsCriterionResponseID = this.getCriterionResponseID();
            IDType rhsCriterionResponseID;
            rhsCriterionResponseID = that.getCriterionResponseID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionResponseID", lhsCriterionResponseID), LocatorUtils.property(thatLocator, "criterionResponseID", rhsCriterionResponseID), lhsCriterionResponseID, rhsCriterionResponseID)) {
                return false;
            }
        }
        {
            DescriptionType lhsCriterionResponseDescription;
            lhsCriterionResponseDescription = this.getCriterionResponseDescription();
            DescriptionType rhsCriterionResponseDescription;
            rhsCriterionResponseDescription = that.getCriterionResponseDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionResponseDescription", lhsCriterionResponseDescription), LocatorUtils.property(thatLocator, "criterionResponseDescription", rhsCriterionResponseDescription), lhsCriterionResponseDescription, rhsCriterionResponseDescription)) {
                return false;
            }
        }
        {
            IndicatorType lhsCriterionFulfillmentIndicator;
            lhsCriterionFulfillmentIndicator = this.getCriterionFulfillmentIndicator();
            IndicatorType rhsCriterionFulfillmentIndicator;
            rhsCriterionFulfillmentIndicator = that.getCriterionFulfillmentIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionFulfillmentIndicator", lhsCriterionFulfillmentIndicator), LocatorUtils.property(thatLocator, "criterionFulfillmentIndicator", rhsCriterionFulfillmentIndicator), lhsCriterionFulfillmentIndicator, rhsCriterionFulfillmentIndicator)) {
                return false;
            }
        }
        {
            TextType lhsCriterionFulfillmentMotivation;
            lhsCriterionFulfillmentMotivation = this.getCriterionFulfillmentMotivation();
            TextType rhsCriterionFulfillmentMotivation;
            rhsCriterionFulfillmentMotivation = that.getCriterionFulfillmentMotivation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionFulfillmentMotivation", lhsCriterionFulfillmentMotivation), LocatorUtils.property(thatLocator, "criterionFulfillmentMotivation", rhsCriterionFulfillmentMotivation), lhsCriterionFulfillmentMotivation, rhsCriterionFulfillmentMotivation)) {
                return false;
            }
        }
        {
            AmountType lhsCriterionFulfillmentAmount;
            lhsCriterionFulfillmentAmount = this.getCriterionFulfillmentAmount();
            AmountType rhsCriterionFulfillmentAmount;
            rhsCriterionFulfillmentAmount = that.getCriterionFulfillmentAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionFulfillmentAmount", lhsCriterionFulfillmentAmount), LocatorUtils.property(thatLocator, "criterionFulfillmentAmount", rhsCriterionFulfillmentAmount), lhsCriterionFulfillmentAmount, rhsCriterionFulfillmentAmount)) {
                return false;
            }
        }
        {
            QuantityType lhsCriterionFulfillmentQuantity;
            lhsCriterionFulfillmentQuantity = this.getCriterionFulfillmentQuantity();
            QuantityType rhsCriterionFulfillmentQuantity;
            rhsCriterionFulfillmentQuantity = that.getCriterionFulfillmentQuantity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionFulfillmentQuantity", lhsCriterionFulfillmentQuantity), LocatorUtils.property(thatLocator, "criterionFulfillmentQuantity", rhsCriterionFulfillmentQuantity), lhsCriterionFulfillmentQuantity, rhsCriterionFulfillmentQuantity)) {
                return false;
            }
        }
        {
            PercentType lhsCriterionFulfillmentPercent;
            lhsCriterionFulfillmentPercent = this.getCriterionFulfillmentPercent();
            PercentType rhsCriterionFulfillmentPercent;
            rhsCriterionFulfillmentPercent = that.getCriterionFulfillmentPercent();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionFulfillmentPercent", lhsCriterionFulfillmentPercent), LocatorUtils.property(thatLocator, "criterionFulfillmentPercent", rhsCriterionFulfillmentPercent), lhsCriterionFulfillmentPercent, rhsCriterionFulfillmentPercent)) {
                return false;
            }
        }
        {
            DescriptionType lhsCriterionFulfillmentDescription;
            lhsCriterionFulfillmentDescription = this.getCriterionFulfillmentDescription();
            DescriptionType rhsCriterionFulfillmentDescription;
            rhsCriterionFulfillmentDescription = that.getCriterionFulfillmentDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionFulfillmentDescription", lhsCriterionFulfillmentDescription), LocatorUtils.property(thatLocator, "criterionFulfillmentDescription", rhsCriterionFulfillmentDescription), lhsCriterionFulfillmentDescription, rhsCriterionFulfillmentDescription)) {
                return false;
            }
        }
        {
            List<EvidenceType> lhsProposedCriterionEvidence;
            lhsProposedCriterionEvidence = (((this.proposedCriterionEvidence!= null)&&(!this.proposedCriterionEvidence.isEmpty()))?this.getProposedCriterionEvidence():null);
            List<EvidenceType> rhsProposedCriterionEvidence;
            rhsProposedCriterionEvidence = (((that.proposedCriterionEvidence!= null)&&(!that.proposedCriterionEvidence.isEmpty()))?that.getProposedCriterionEvidence():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "proposedCriterionEvidence", lhsProposedCriterionEvidence), LocatorUtils.property(thatLocator, "proposedCriterionEvidence", rhsProposedCriterionEvidence), lhsProposedCriterionEvidence, rhsProposedCriterionEvidence)) {
                return false;
            }
        }
        {
            PeriodType lhsCriterionFulfillmentPeriod;
            lhsCriterionFulfillmentPeriod = this.getCriterionFulfillmentPeriod();
            PeriodType rhsCriterionFulfillmentPeriod;
            rhsCriterionFulfillmentPeriod = that.getCriterionFulfillmentPeriod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionFulfillmentPeriod", lhsCriterionFulfillmentPeriod), LocatorUtils.property(thatLocator, "criterionFulfillmentPeriod", rhsCriterionFulfillmentPeriod), lhsCriterionFulfillmentPeriod, rhsCriterionFulfillmentPeriod)) {
                return false;
            }
        }
        {
            List<LocationType> lhsCriterionFulfillmentEventLocation;
            lhsCriterionFulfillmentEventLocation = (((this.criterionFulfillmentEventLocation!= null)&&(!this.criterionFulfillmentEventLocation.isEmpty()))?this.getCriterionFulfillmentEventLocation():null);
            List<LocationType> rhsCriterionFulfillmentEventLocation;
            rhsCriterionFulfillmentEventLocation = (((that.criterionFulfillmentEventLocation!= null)&&(!that.criterionFulfillmentEventLocation.isEmpty()))?that.getCriterionFulfillmentEventLocation():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionFulfillmentEventLocation", lhsCriterionFulfillmentEventLocation), LocatorUtils.property(thatLocator, "criterionFulfillmentEventLocation", rhsCriterionFulfillmentEventLocation), lhsCriterionFulfillmentEventLocation, rhsCriterionFulfillmentEventLocation)) {
                return false;
            }
        }
        {
            List<PartyType> lhsCriterionFulfillmentAffectedParty;
            lhsCriterionFulfillmentAffectedParty = (((this.criterionFulfillmentAffectedParty!= null)&&(!this.criterionFulfillmentAffectedParty.isEmpty()))?this.getCriterionFulfillmentAffectedParty():null);
            List<PartyType> rhsCriterionFulfillmentAffectedParty;
            rhsCriterionFulfillmentAffectedParty = (((that.criterionFulfillmentAffectedParty!= null)&&(!that.criterionFulfillmentAffectedParty.isEmpty()))?that.getCriterionFulfillmentAffectedParty():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionFulfillmentAffectedParty", lhsCriterionFulfillmentAffectedParty), LocatorUtils.property(thatLocator, "criterionFulfillmentAffectedParty", rhsCriterionFulfillmentAffectedParty), lhsCriterionFulfillmentAffectedParty, rhsCriterionFulfillmentAffectedParty)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            IDType theCriterionResponseID;
            theCriterionResponseID = this.getCriterionResponseID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionResponseID", theCriterionResponseID), currentHashCode, theCriterionResponseID);
        }
        {
            DescriptionType theCriterionResponseDescription;
            theCriterionResponseDescription = this.getCriterionResponseDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionResponseDescription", theCriterionResponseDescription), currentHashCode, theCriterionResponseDescription);
        }
        {
            IndicatorType theCriterionFulfillmentIndicator;
            theCriterionFulfillmentIndicator = this.getCriterionFulfillmentIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionFulfillmentIndicator", theCriterionFulfillmentIndicator), currentHashCode, theCriterionFulfillmentIndicator);
        }
        {
            TextType theCriterionFulfillmentMotivation;
            theCriterionFulfillmentMotivation = this.getCriterionFulfillmentMotivation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionFulfillmentMotivation", theCriterionFulfillmentMotivation), currentHashCode, theCriterionFulfillmentMotivation);
        }
        {
            AmountType theCriterionFulfillmentAmount;
            theCriterionFulfillmentAmount = this.getCriterionFulfillmentAmount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionFulfillmentAmount", theCriterionFulfillmentAmount), currentHashCode, theCriterionFulfillmentAmount);
        }
        {
            QuantityType theCriterionFulfillmentQuantity;
            theCriterionFulfillmentQuantity = this.getCriterionFulfillmentQuantity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionFulfillmentQuantity", theCriterionFulfillmentQuantity), currentHashCode, theCriterionFulfillmentQuantity);
        }
        {
            PercentType theCriterionFulfillmentPercent;
            theCriterionFulfillmentPercent = this.getCriterionFulfillmentPercent();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionFulfillmentPercent", theCriterionFulfillmentPercent), currentHashCode, theCriterionFulfillmentPercent);
        }
        {
            DescriptionType theCriterionFulfillmentDescription;
            theCriterionFulfillmentDescription = this.getCriterionFulfillmentDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionFulfillmentDescription", theCriterionFulfillmentDescription), currentHashCode, theCriterionFulfillmentDescription);
        }
        {
            List<EvidenceType> theProposedCriterionEvidence;
            theProposedCriterionEvidence = (((this.proposedCriterionEvidence!= null)&&(!this.proposedCriterionEvidence.isEmpty()))?this.getProposedCriterionEvidence():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "proposedCriterionEvidence", theProposedCriterionEvidence), currentHashCode, theProposedCriterionEvidence);
        }
        {
            PeriodType theCriterionFulfillmentPeriod;
            theCriterionFulfillmentPeriod = this.getCriterionFulfillmentPeriod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionFulfillmentPeriod", theCriterionFulfillmentPeriod), currentHashCode, theCriterionFulfillmentPeriod);
        }
        {
            List<LocationType> theCriterionFulfillmentEventLocation;
            theCriterionFulfillmentEventLocation = (((this.criterionFulfillmentEventLocation!= null)&&(!this.criterionFulfillmentEventLocation.isEmpty()))?this.getCriterionFulfillmentEventLocation():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionFulfillmentEventLocation", theCriterionFulfillmentEventLocation), currentHashCode, theCriterionFulfillmentEventLocation);
        }
        {
            List<PartyType> theCriterionFulfillmentAffectedParty;
            theCriterionFulfillmentAffectedParty = (((this.criterionFulfillmentAffectedParty!= null)&&(!this.criterionFulfillmentAffectedParty.isEmpty()))?this.getCriterionFulfillmentAffectedParty():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionFulfillmentAffectedParty", theCriterionFulfillmentAffectedParty), currentHashCode, theCriterionFulfillmentAffectedParty);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
