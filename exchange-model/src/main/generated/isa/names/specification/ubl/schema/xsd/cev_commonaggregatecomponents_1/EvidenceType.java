//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.11 at 11:41:57 AM CET 
//


package isa.names.specification.ubl.schema.xsd.cev_commonaggregatecomponents_1;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import isa.names.specification.ubl.schema.xsd.cev_commonbasiccomponents_1.IndicatorType;
import oasis.names.specification.ubl.schema.xsd.commonaggregatecomponents_2.DocumentReferenceType;
import oasis.names.specification.ubl.schema.xsd.commonaggregatecomponents_2.PartyType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.DescriptionType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.IDType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.NameType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.TypeCodeType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for EvidenceType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="EvidenceType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CEV-CommonBasicComponents-1}EvidenceID" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CEV-CommonBasicComponents-1}EvidenceTypeCode" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CEV-CommonBasicComponents-1}EvidenceName" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CEV-CommonBasicComponents-1}EmbeddedEvidenceIndicator" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CEV-CommonBasicComponents-1}EvidenceDescription" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CEV-CommonAggregateComponents-1}EvidenceIssuerParty" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CEV-CommonAggregateComponents-1}EvidenceDocumentReference" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "EvidenceType", propOrder = {
    "evidenceID",
    "evidenceTypeCode",
    "evidenceName",
    "embeddedEvidenceIndicator",
    "evidenceDescription",
    "evidenceIssuerParty",
    "evidenceDocumentReference"
})
public class EvidenceType
    implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 100L;
    @XmlElement(name = "EvidenceID", namespace = "urn:isa:names:specification:ubl:schema:xsd:CEV-CommonBasicComponents-1")
    protected IDType evidenceID;
    @XmlElement(name = "EvidenceTypeCode", namespace = "urn:isa:names:specification:ubl:schema:xsd:CEV-CommonBasicComponents-1")
    protected TypeCodeType evidenceTypeCode;
    @XmlElement(name = "EvidenceName", namespace = "urn:isa:names:specification:ubl:schema:xsd:CEV-CommonBasicComponents-1")
    protected NameType evidenceName;
    @XmlElement(name = "EmbeddedEvidenceIndicator", namespace = "urn:isa:names:specification:ubl:schema:xsd:CEV-CommonBasicComponents-1")
    protected IndicatorType embeddedEvidenceIndicator;
    @XmlElement(name = "EvidenceDescription", namespace = "urn:isa:names:specification:ubl:schema:xsd:CEV-CommonBasicComponents-1")
    protected List<DescriptionType> evidenceDescription;
    @XmlElement(name = "EvidenceIssuerParty")
    protected PartyType evidenceIssuerParty;
    @XmlElement(name = "EvidenceDocumentReference")
    protected List<DocumentReferenceType> evidenceDocumentReference;

    /**
     * Gets the value of the evidenceID property.
     * 
     * @return
     *     possible object is
     *     {@link IDType }
     *     
     */
    public IDType getEvidenceID() {
        return evidenceID;
    }

    /**
     * Sets the value of the evidenceID property.
     * 
     * @param value
     *     allowed object is
     *     {@link IDType }
     *     
     */
    public void setEvidenceID(IDType value) {
        this.evidenceID = value;
    }

    /**
     * Gets the value of the evidenceTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link TypeCodeType }
     *     
     */
    public TypeCodeType getEvidenceTypeCode() {
        return evidenceTypeCode;
    }

    /**
     * Sets the value of the evidenceTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypeCodeType }
     *     
     */
    public void setEvidenceTypeCode(TypeCodeType value) {
        this.evidenceTypeCode = value;
    }

    /**
     * Gets the value of the evidenceName property.
     * 
     * @return
     *     possible object is
     *     {@link NameType }
     *     
     */
    public NameType getEvidenceName() {
        return evidenceName;
    }

    /**
     * Sets the value of the evidenceName property.
     * 
     * @param value
     *     allowed object is
     *     {@link NameType }
     *     
     */
    public void setEvidenceName(NameType value) {
        this.evidenceName = value;
    }

    /**
     * Gets the value of the embeddedEvidenceIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link IndicatorType }
     *     
     */
    public IndicatorType getEmbeddedEvidenceIndicator() {
        return embeddedEvidenceIndicator;
    }

    /**
     * Sets the value of the embeddedEvidenceIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link IndicatorType }
     *     
     */
    public void setEmbeddedEvidenceIndicator(IndicatorType value) {
        this.embeddedEvidenceIndicator = value;
    }

    /**
     * Gets the value of the evidenceDescription property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the evidenceDescription property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEvidenceDescription().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DescriptionType }
     * 
     * 
     */
    public List<DescriptionType> getEvidenceDescription() {
        if (evidenceDescription == null) {
            evidenceDescription = new ArrayList<DescriptionType>();
        }
        return this.evidenceDescription;
    }

    /**
     * Gets the value of the evidenceIssuerParty property.
     * 
     * @return
     *     possible object is
     *     {@link PartyType }
     *     
     */
    public PartyType getEvidenceIssuerParty() {
        return evidenceIssuerParty;
    }

    /**
     * Sets the value of the evidenceIssuerParty property.
     * 
     * @param value
     *     allowed object is
     *     {@link PartyType }
     *     
     */
    public void setEvidenceIssuerParty(PartyType value) {
        this.evidenceIssuerParty = value;
    }

    /**
     * Gets the value of the evidenceDocumentReference property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the evidenceDocumentReference property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEvidenceDocumentReference().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DocumentReferenceType }
     * 
     * 
     */
    public List<DocumentReferenceType> getEvidenceDocumentReference() {
        if (evidenceDocumentReference == null) {
            evidenceDocumentReference = new ArrayList<DocumentReferenceType>();
        }
        return this.evidenceDocumentReference;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            IDType theEvidenceID;
            theEvidenceID = this.getEvidenceID();
            strategy.appendField(locator, this, "evidenceID", buffer, theEvidenceID);
        }
        {
            TypeCodeType theEvidenceTypeCode;
            theEvidenceTypeCode = this.getEvidenceTypeCode();
            strategy.appendField(locator, this, "evidenceTypeCode", buffer, theEvidenceTypeCode);
        }
        {
            NameType theEvidenceName;
            theEvidenceName = this.getEvidenceName();
            strategy.appendField(locator, this, "evidenceName", buffer, theEvidenceName);
        }
        {
            IndicatorType theEmbeddedEvidenceIndicator;
            theEmbeddedEvidenceIndicator = this.getEmbeddedEvidenceIndicator();
            strategy.appendField(locator, this, "embeddedEvidenceIndicator", buffer, theEmbeddedEvidenceIndicator);
        }
        {
            List<DescriptionType> theEvidenceDescription;
            theEvidenceDescription = (((this.evidenceDescription!= null)&&(!this.evidenceDescription.isEmpty()))?this.getEvidenceDescription():null);
            strategy.appendField(locator, this, "evidenceDescription", buffer, theEvidenceDescription);
        }
        {
            PartyType theEvidenceIssuerParty;
            theEvidenceIssuerParty = this.getEvidenceIssuerParty();
            strategy.appendField(locator, this, "evidenceIssuerParty", buffer, theEvidenceIssuerParty);
        }
        {
            List<DocumentReferenceType> theEvidenceDocumentReference;
            theEvidenceDocumentReference = (((this.evidenceDocumentReference!= null)&&(!this.evidenceDocumentReference.isEmpty()))?this.getEvidenceDocumentReference():null);
            strategy.appendField(locator, this, "evidenceDocumentReference", buffer, theEvidenceDocumentReference);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof EvidenceType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final EvidenceType that = ((EvidenceType) object);
        {
            IDType lhsEvidenceID;
            lhsEvidenceID = this.getEvidenceID();
            IDType rhsEvidenceID;
            rhsEvidenceID = that.getEvidenceID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "evidenceID", lhsEvidenceID), LocatorUtils.property(thatLocator, "evidenceID", rhsEvidenceID), lhsEvidenceID, rhsEvidenceID)) {
                return false;
            }
        }
        {
            TypeCodeType lhsEvidenceTypeCode;
            lhsEvidenceTypeCode = this.getEvidenceTypeCode();
            TypeCodeType rhsEvidenceTypeCode;
            rhsEvidenceTypeCode = that.getEvidenceTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "evidenceTypeCode", lhsEvidenceTypeCode), LocatorUtils.property(thatLocator, "evidenceTypeCode", rhsEvidenceTypeCode), lhsEvidenceTypeCode, rhsEvidenceTypeCode)) {
                return false;
            }
        }
        {
            NameType lhsEvidenceName;
            lhsEvidenceName = this.getEvidenceName();
            NameType rhsEvidenceName;
            rhsEvidenceName = that.getEvidenceName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "evidenceName", lhsEvidenceName), LocatorUtils.property(thatLocator, "evidenceName", rhsEvidenceName), lhsEvidenceName, rhsEvidenceName)) {
                return false;
            }
        }
        {
            IndicatorType lhsEmbeddedEvidenceIndicator;
            lhsEmbeddedEvidenceIndicator = this.getEmbeddedEvidenceIndicator();
            IndicatorType rhsEmbeddedEvidenceIndicator;
            rhsEmbeddedEvidenceIndicator = that.getEmbeddedEvidenceIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "embeddedEvidenceIndicator", lhsEmbeddedEvidenceIndicator), LocatorUtils.property(thatLocator, "embeddedEvidenceIndicator", rhsEmbeddedEvidenceIndicator), lhsEmbeddedEvidenceIndicator, rhsEmbeddedEvidenceIndicator)) {
                return false;
            }
        }
        {
            List<DescriptionType> lhsEvidenceDescription;
            lhsEvidenceDescription = (((this.evidenceDescription!= null)&&(!this.evidenceDescription.isEmpty()))?this.getEvidenceDescription():null);
            List<DescriptionType> rhsEvidenceDescription;
            rhsEvidenceDescription = (((that.evidenceDescription!= null)&&(!that.evidenceDescription.isEmpty()))?that.getEvidenceDescription():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "evidenceDescription", lhsEvidenceDescription), LocatorUtils.property(thatLocator, "evidenceDescription", rhsEvidenceDescription), lhsEvidenceDescription, rhsEvidenceDescription)) {
                return false;
            }
        }
        {
            PartyType lhsEvidenceIssuerParty;
            lhsEvidenceIssuerParty = this.getEvidenceIssuerParty();
            PartyType rhsEvidenceIssuerParty;
            rhsEvidenceIssuerParty = that.getEvidenceIssuerParty();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "evidenceIssuerParty", lhsEvidenceIssuerParty), LocatorUtils.property(thatLocator, "evidenceIssuerParty", rhsEvidenceIssuerParty), lhsEvidenceIssuerParty, rhsEvidenceIssuerParty)) {
                return false;
            }
        }
        {
            List<DocumentReferenceType> lhsEvidenceDocumentReference;
            lhsEvidenceDocumentReference = (((this.evidenceDocumentReference!= null)&&(!this.evidenceDocumentReference.isEmpty()))?this.getEvidenceDocumentReference():null);
            List<DocumentReferenceType> rhsEvidenceDocumentReference;
            rhsEvidenceDocumentReference = (((that.evidenceDocumentReference!= null)&&(!that.evidenceDocumentReference.isEmpty()))?that.getEvidenceDocumentReference():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "evidenceDocumentReference", lhsEvidenceDocumentReference), LocatorUtils.property(thatLocator, "evidenceDocumentReference", rhsEvidenceDocumentReference), lhsEvidenceDocumentReference, rhsEvidenceDocumentReference)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            IDType theEvidenceID;
            theEvidenceID = this.getEvidenceID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "evidenceID", theEvidenceID), currentHashCode, theEvidenceID);
        }
        {
            TypeCodeType theEvidenceTypeCode;
            theEvidenceTypeCode = this.getEvidenceTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "evidenceTypeCode", theEvidenceTypeCode), currentHashCode, theEvidenceTypeCode);
        }
        {
            NameType theEvidenceName;
            theEvidenceName = this.getEvidenceName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "evidenceName", theEvidenceName), currentHashCode, theEvidenceName);
        }
        {
            IndicatorType theEmbeddedEvidenceIndicator;
            theEmbeddedEvidenceIndicator = this.getEmbeddedEvidenceIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "embeddedEvidenceIndicator", theEmbeddedEvidenceIndicator), currentHashCode, theEmbeddedEvidenceIndicator);
        }
        {
            List<DescriptionType> theEvidenceDescription;
            theEvidenceDescription = (((this.evidenceDescription!= null)&&(!this.evidenceDescription.isEmpty()))?this.getEvidenceDescription():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "evidenceDescription", theEvidenceDescription), currentHashCode, theEvidenceDescription);
        }
        {
            PartyType theEvidenceIssuerParty;
            theEvidenceIssuerParty = this.getEvidenceIssuerParty();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "evidenceIssuerParty", theEvidenceIssuerParty), currentHashCode, theEvidenceIssuerParty);
        }
        {
            List<DocumentReferenceType> theEvidenceDocumentReference;
            theEvidenceDocumentReference = (((this.evidenceDocumentReference!= null)&&(!this.evidenceDocumentReference.isEmpty()))?this.getEvidenceDocumentReference():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "evidenceDocumentReference", theEvidenceDocumentReference), currentHashCode, theEvidenceDocumentReference);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
