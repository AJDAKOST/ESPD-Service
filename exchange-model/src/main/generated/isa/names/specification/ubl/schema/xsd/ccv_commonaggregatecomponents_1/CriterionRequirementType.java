//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.11 at 11:41:57 AM CET 
//


package isa.names.specification.ubl.schema.xsd.ccv_commonaggregatecomponents_1;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import isa.names.specification.ubl.schema.xsd.cev_commonaggregatecomponents_1.EvidenceType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.DescriptionType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.IDType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.QuantityType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.TypeCodeType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for CriterionRequirementType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CriterionRequirementType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionRequirementID" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionRequirementDescription" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionRequirementAmountTypeCode" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionRequirementAmountDescription" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionRequirementQuantityTypeCode" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionRequirementQuantityDescription" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionRequirementPercentTypeCode" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionRequirementPercentDescription" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionRequirementPeriodTypeCode" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionRequirementPeriodDescription" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionRequirementEventTypeCode" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1}CriterionRequirementEventDescription" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:isa:names:specification:ubl:schema:xsd:CCV-CommonAggregateComponents-1}RequiredTypeOfEvidence" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CriterionRequirementType", propOrder = {
    "criterionRequirementID",
    "criterionRequirementDescription",
    "criterionRequirementAmountTypeCode",
    "criterionRequirementAmountDescription",
    "criterionRequirementQuantityTypeCode",
    "criterionRequirementQuantityDescription",
    "criterionRequirementPercentTypeCode",
    "criterionRequirementPercentDescription",
    "criterionRequirementPeriodTypeCode",
    "criterionRequirementPeriodDescription",
    "criterionRequirementEventTypeCode",
    "criterionRequirementEventDescription",
    "requiredTypeOfEvidence"
})
public class CriterionRequirementType
    implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 100L;
    @XmlElement(name = "CriterionRequirementID", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected IDType criterionRequirementID;
    @XmlElement(name = "CriterionRequirementDescription", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected DescriptionType criterionRequirementDescription;
    @XmlElement(name = "CriterionRequirementAmountTypeCode", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected TypeCodeType criterionRequirementAmountTypeCode;
    @XmlElement(name = "CriterionRequirementAmountDescription", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected DescriptionType criterionRequirementAmountDescription;
    @XmlElement(name = "CriterionRequirementQuantityTypeCode", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected QuantityType criterionRequirementQuantityTypeCode;
    @XmlElement(name = "CriterionRequirementQuantityDescription", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected DescriptionType criterionRequirementQuantityDescription;
    @XmlElement(name = "CriterionRequirementPercentTypeCode", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected TypeCodeType criterionRequirementPercentTypeCode;
    @XmlElement(name = "CriterionRequirementPercentDescription", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected DescriptionType criterionRequirementPercentDescription;
    @XmlElement(name = "CriterionRequirementPeriodTypeCode", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected TypeCodeType criterionRequirementPeriodTypeCode;
    @XmlElement(name = "CriterionRequirementPeriodDescription", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected DescriptionType criterionRequirementPeriodDescription;
    @XmlElement(name = "CriterionRequirementEventTypeCode", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected TypeCodeType criterionRequirementEventTypeCode;
    @XmlElement(name = "CriterionRequirementEventDescription", namespace = "urn:isa:names:specification:ubl:schema:xsd:CCV-CommonBasicComponents-1")
    protected DescriptionType criterionRequirementEventDescription;
    @XmlElement(name = "RequiredTypeOfEvidence")
    protected List<EvidenceType> requiredTypeOfEvidence;

    /**
     * Gets the value of the criterionRequirementID property.
     * 
     * @return
     *     possible object is
     *     {@link IDType }
     *     
     */
    public IDType getCriterionRequirementID() {
        return criterionRequirementID;
    }

    /**
     * Sets the value of the criterionRequirementID property.
     * 
     * @param value
     *     allowed object is
     *     {@link IDType }
     *     
     */
    public void setCriterionRequirementID(IDType value) {
        this.criterionRequirementID = value;
    }

    /**
     * Gets the value of the criterionRequirementDescription property.
     * 
     * @return
     *     possible object is
     *     {@link DescriptionType }
     *     
     */
    public DescriptionType getCriterionRequirementDescription() {
        return criterionRequirementDescription;
    }

    /**
     * Sets the value of the criterionRequirementDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link DescriptionType }
     *     
     */
    public void setCriterionRequirementDescription(DescriptionType value) {
        this.criterionRequirementDescription = value;
    }

    /**
     * Gets the value of the criterionRequirementAmountTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link TypeCodeType }
     *     
     */
    public TypeCodeType getCriterionRequirementAmountTypeCode() {
        return criterionRequirementAmountTypeCode;
    }

    /**
     * Sets the value of the criterionRequirementAmountTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypeCodeType }
     *     
     */
    public void setCriterionRequirementAmountTypeCode(TypeCodeType value) {
        this.criterionRequirementAmountTypeCode = value;
    }

    /**
     * Gets the value of the criterionRequirementAmountDescription property.
     * 
     * @return
     *     possible object is
     *     {@link DescriptionType }
     *     
     */
    public DescriptionType getCriterionRequirementAmountDescription() {
        return criterionRequirementAmountDescription;
    }

    /**
     * Sets the value of the criterionRequirementAmountDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link DescriptionType }
     *     
     */
    public void setCriterionRequirementAmountDescription(DescriptionType value) {
        this.criterionRequirementAmountDescription = value;
    }

    /**
     * Gets the value of the criterionRequirementQuantityTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link QuantityType }
     *     
     */
    public QuantityType getCriterionRequirementQuantityTypeCode() {
        return criterionRequirementQuantityTypeCode;
    }

    /**
     * Sets the value of the criterionRequirementQuantityTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link QuantityType }
     *     
     */
    public void setCriterionRequirementQuantityTypeCode(QuantityType value) {
        this.criterionRequirementQuantityTypeCode = value;
    }

    /**
     * Gets the value of the criterionRequirementQuantityDescription property.
     * 
     * @return
     *     possible object is
     *     {@link DescriptionType }
     *     
     */
    public DescriptionType getCriterionRequirementQuantityDescription() {
        return criterionRequirementQuantityDescription;
    }

    /**
     * Sets the value of the criterionRequirementQuantityDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link DescriptionType }
     *     
     */
    public void setCriterionRequirementQuantityDescription(DescriptionType value) {
        this.criterionRequirementQuantityDescription = value;
    }

    /**
     * Gets the value of the criterionRequirementPercentTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link TypeCodeType }
     *     
     */
    public TypeCodeType getCriterionRequirementPercentTypeCode() {
        return criterionRequirementPercentTypeCode;
    }

    /**
     * Sets the value of the criterionRequirementPercentTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypeCodeType }
     *     
     */
    public void setCriterionRequirementPercentTypeCode(TypeCodeType value) {
        this.criterionRequirementPercentTypeCode = value;
    }

    /**
     * Gets the value of the criterionRequirementPercentDescription property.
     * 
     * @return
     *     possible object is
     *     {@link DescriptionType }
     *     
     */
    public DescriptionType getCriterionRequirementPercentDescription() {
        return criterionRequirementPercentDescription;
    }

    /**
     * Sets the value of the criterionRequirementPercentDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link DescriptionType }
     *     
     */
    public void setCriterionRequirementPercentDescription(DescriptionType value) {
        this.criterionRequirementPercentDescription = value;
    }

    /**
     * Gets the value of the criterionRequirementPeriodTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link TypeCodeType }
     *     
     */
    public TypeCodeType getCriterionRequirementPeriodTypeCode() {
        return criterionRequirementPeriodTypeCode;
    }

    /**
     * Sets the value of the criterionRequirementPeriodTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypeCodeType }
     *     
     */
    public void setCriterionRequirementPeriodTypeCode(TypeCodeType value) {
        this.criterionRequirementPeriodTypeCode = value;
    }

    /**
     * Gets the value of the criterionRequirementPeriodDescription property.
     * 
     * @return
     *     possible object is
     *     {@link DescriptionType }
     *     
     */
    public DescriptionType getCriterionRequirementPeriodDescription() {
        return criterionRequirementPeriodDescription;
    }

    /**
     * Sets the value of the criterionRequirementPeriodDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link DescriptionType }
     *     
     */
    public void setCriterionRequirementPeriodDescription(DescriptionType value) {
        this.criterionRequirementPeriodDescription = value;
    }

    /**
     * Gets the value of the criterionRequirementEventTypeCode property.
     * 
     * @return
     *     possible object is
     *     {@link TypeCodeType }
     *     
     */
    public TypeCodeType getCriterionRequirementEventTypeCode() {
        return criterionRequirementEventTypeCode;
    }

    /**
     * Sets the value of the criterionRequirementEventTypeCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypeCodeType }
     *     
     */
    public void setCriterionRequirementEventTypeCode(TypeCodeType value) {
        this.criterionRequirementEventTypeCode = value;
    }

    /**
     * Gets the value of the criterionRequirementEventDescription property.
     * 
     * @return
     *     possible object is
     *     {@link DescriptionType }
     *     
     */
    public DescriptionType getCriterionRequirementEventDescription() {
        return criterionRequirementEventDescription;
    }

    /**
     * Sets the value of the criterionRequirementEventDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link DescriptionType }
     *     
     */
    public void setCriterionRequirementEventDescription(DescriptionType value) {
        this.criterionRequirementEventDescription = value;
    }

    /**
     * Gets the value of the requiredTypeOfEvidence property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the requiredTypeOfEvidence property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRequiredTypeOfEvidence().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EvidenceType }
     * 
     * 
     */
    public List<EvidenceType> getRequiredTypeOfEvidence() {
        if (requiredTypeOfEvidence == null) {
            requiredTypeOfEvidence = new ArrayList<EvidenceType>();
        }
        return this.requiredTypeOfEvidence;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            IDType theCriterionRequirementID;
            theCriterionRequirementID = this.getCriterionRequirementID();
            strategy.appendField(locator, this, "criterionRequirementID", buffer, theCriterionRequirementID);
        }
        {
            DescriptionType theCriterionRequirementDescription;
            theCriterionRequirementDescription = this.getCriterionRequirementDescription();
            strategy.appendField(locator, this, "criterionRequirementDescription", buffer, theCriterionRequirementDescription);
        }
        {
            TypeCodeType theCriterionRequirementAmountTypeCode;
            theCriterionRequirementAmountTypeCode = this.getCriterionRequirementAmountTypeCode();
            strategy.appendField(locator, this, "criterionRequirementAmountTypeCode", buffer, theCriterionRequirementAmountTypeCode);
        }
        {
            DescriptionType theCriterionRequirementAmountDescription;
            theCriterionRequirementAmountDescription = this.getCriterionRequirementAmountDescription();
            strategy.appendField(locator, this, "criterionRequirementAmountDescription", buffer, theCriterionRequirementAmountDescription);
        }
        {
            QuantityType theCriterionRequirementQuantityTypeCode;
            theCriterionRequirementQuantityTypeCode = this.getCriterionRequirementQuantityTypeCode();
            strategy.appendField(locator, this, "criterionRequirementQuantityTypeCode", buffer, theCriterionRequirementQuantityTypeCode);
        }
        {
            DescriptionType theCriterionRequirementQuantityDescription;
            theCriterionRequirementQuantityDescription = this.getCriterionRequirementQuantityDescription();
            strategy.appendField(locator, this, "criterionRequirementQuantityDescription", buffer, theCriterionRequirementQuantityDescription);
        }
        {
            TypeCodeType theCriterionRequirementPercentTypeCode;
            theCriterionRequirementPercentTypeCode = this.getCriterionRequirementPercentTypeCode();
            strategy.appendField(locator, this, "criterionRequirementPercentTypeCode", buffer, theCriterionRequirementPercentTypeCode);
        }
        {
            DescriptionType theCriterionRequirementPercentDescription;
            theCriterionRequirementPercentDescription = this.getCriterionRequirementPercentDescription();
            strategy.appendField(locator, this, "criterionRequirementPercentDescription", buffer, theCriterionRequirementPercentDescription);
        }
        {
            TypeCodeType theCriterionRequirementPeriodTypeCode;
            theCriterionRequirementPeriodTypeCode = this.getCriterionRequirementPeriodTypeCode();
            strategy.appendField(locator, this, "criterionRequirementPeriodTypeCode", buffer, theCriterionRequirementPeriodTypeCode);
        }
        {
            DescriptionType theCriterionRequirementPeriodDescription;
            theCriterionRequirementPeriodDescription = this.getCriterionRequirementPeriodDescription();
            strategy.appendField(locator, this, "criterionRequirementPeriodDescription", buffer, theCriterionRequirementPeriodDescription);
        }
        {
            TypeCodeType theCriterionRequirementEventTypeCode;
            theCriterionRequirementEventTypeCode = this.getCriterionRequirementEventTypeCode();
            strategy.appendField(locator, this, "criterionRequirementEventTypeCode", buffer, theCriterionRequirementEventTypeCode);
        }
        {
            DescriptionType theCriterionRequirementEventDescription;
            theCriterionRequirementEventDescription = this.getCriterionRequirementEventDescription();
            strategy.appendField(locator, this, "criterionRequirementEventDescription", buffer, theCriterionRequirementEventDescription);
        }
        {
            List<EvidenceType> theRequiredTypeOfEvidence;
            theRequiredTypeOfEvidence = (((this.requiredTypeOfEvidence!= null)&&(!this.requiredTypeOfEvidence.isEmpty()))?this.getRequiredTypeOfEvidence():null);
            strategy.appendField(locator, this, "requiredTypeOfEvidence", buffer, theRequiredTypeOfEvidence);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CriterionRequirementType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CriterionRequirementType that = ((CriterionRequirementType) object);
        {
            IDType lhsCriterionRequirementID;
            lhsCriterionRequirementID = this.getCriterionRequirementID();
            IDType rhsCriterionRequirementID;
            rhsCriterionRequirementID = that.getCriterionRequirementID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionRequirementID", lhsCriterionRequirementID), LocatorUtils.property(thatLocator, "criterionRequirementID", rhsCriterionRequirementID), lhsCriterionRequirementID, rhsCriterionRequirementID)) {
                return false;
            }
        }
        {
            DescriptionType lhsCriterionRequirementDescription;
            lhsCriterionRequirementDescription = this.getCriterionRequirementDescription();
            DescriptionType rhsCriterionRequirementDescription;
            rhsCriterionRequirementDescription = that.getCriterionRequirementDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionRequirementDescription", lhsCriterionRequirementDescription), LocatorUtils.property(thatLocator, "criterionRequirementDescription", rhsCriterionRequirementDescription), lhsCriterionRequirementDescription, rhsCriterionRequirementDescription)) {
                return false;
            }
        }
        {
            TypeCodeType lhsCriterionRequirementAmountTypeCode;
            lhsCriterionRequirementAmountTypeCode = this.getCriterionRequirementAmountTypeCode();
            TypeCodeType rhsCriterionRequirementAmountTypeCode;
            rhsCriterionRequirementAmountTypeCode = that.getCriterionRequirementAmountTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionRequirementAmountTypeCode", lhsCriterionRequirementAmountTypeCode), LocatorUtils.property(thatLocator, "criterionRequirementAmountTypeCode", rhsCriterionRequirementAmountTypeCode), lhsCriterionRequirementAmountTypeCode, rhsCriterionRequirementAmountTypeCode)) {
                return false;
            }
        }
        {
            DescriptionType lhsCriterionRequirementAmountDescription;
            lhsCriterionRequirementAmountDescription = this.getCriterionRequirementAmountDescription();
            DescriptionType rhsCriterionRequirementAmountDescription;
            rhsCriterionRequirementAmountDescription = that.getCriterionRequirementAmountDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionRequirementAmountDescription", lhsCriterionRequirementAmountDescription), LocatorUtils.property(thatLocator, "criterionRequirementAmountDescription", rhsCriterionRequirementAmountDescription), lhsCriterionRequirementAmountDescription, rhsCriterionRequirementAmountDescription)) {
                return false;
            }
        }
        {
            QuantityType lhsCriterionRequirementQuantityTypeCode;
            lhsCriterionRequirementQuantityTypeCode = this.getCriterionRequirementQuantityTypeCode();
            QuantityType rhsCriterionRequirementQuantityTypeCode;
            rhsCriterionRequirementQuantityTypeCode = that.getCriterionRequirementQuantityTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionRequirementQuantityTypeCode", lhsCriterionRequirementQuantityTypeCode), LocatorUtils.property(thatLocator, "criterionRequirementQuantityTypeCode", rhsCriterionRequirementQuantityTypeCode), lhsCriterionRequirementQuantityTypeCode, rhsCriterionRequirementQuantityTypeCode)) {
                return false;
            }
        }
        {
            DescriptionType lhsCriterionRequirementQuantityDescription;
            lhsCriterionRequirementQuantityDescription = this.getCriterionRequirementQuantityDescription();
            DescriptionType rhsCriterionRequirementQuantityDescription;
            rhsCriterionRequirementQuantityDescription = that.getCriterionRequirementQuantityDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionRequirementQuantityDescription", lhsCriterionRequirementQuantityDescription), LocatorUtils.property(thatLocator, "criterionRequirementQuantityDescription", rhsCriterionRequirementQuantityDescription), lhsCriterionRequirementQuantityDescription, rhsCriterionRequirementQuantityDescription)) {
                return false;
            }
        }
        {
            TypeCodeType lhsCriterionRequirementPercentTypeCode;
            lhsCriterionRequirementPercentTypeCode = this.getCriterionRequirementPercentTypeCode();
            TypeCodeType rhsCriterionRequirementPercentTypeCode;
            rhsCriterionRequirementPercentTypeCode = that.getCriterionRequirementPercentTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionRequirementPercentTypeCode", lhsCriterionRequirementPercentTypeCode), LocatorUtils.property(thatLocator, "criterionRequirementPercentTypeCode", rhsCriterionRequirementPercentTypeCode), lhsCriterionRequirementPercentTypeCode, rhsCriterionRequirementPercentTypeCode)) {
                return false;
            }
        }
        {
            DescriptionType lhsCriterionRequirementPercentDescription;
            lhsCriterionRequirementPercentDescription = this.getCriterionRequirementPercentDescription();
            DescriptionType rhsCriterionRequirementPercentDescription;
            rhsCriterionRequirementPercentDescription = that.getCriterionRequirementPercentDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionRequirementPercentDescription", lhsCriterionRequirementPercentDescription), LocatorUtils.property(thatLocator, "criterionRequirementPercentDescription", rhsCriterionRequirementPercentDescription), lhsCriterionRequirementPercentDescription, rhsCriterionRequirementPercentDescription)) {
                return false;
            }
        }
        {
            TypeCodeType lhsCriterionRequirementPeriodTypeCode;
            lhsCriterionRequirementPeriodTypeCode = this.getCriterionRequirementPeriodTypeCode();
            TypeCodeType rhsCriterionRequirementPeriodTypeCode;
            rhsCriterionRequirementPeriodTypeCode = that.getCriterionRequirementPeriodTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionRequirementPeriodTypeCode", lhsCriterionRequirementPeriodTypeCode), LocatorUtils.property(thatLocator, "criterionRequirementPeriodTypeCode", rhsCriterionRequirementPeriodTypeCode), lhsCriterionRequirementPeriodTypeCode, rhsCriterionRequirementPeriodTypeCode)) {
                return false;
            }
        }
        {
            DescriptionType lhsCriterionRequirementPeriodDescription;
            lhsCriterionRequirementPeriodDescription = this.getCriterionRequirementPeriodDescription();
            DescriptionType rhsCriterionRequirementPeriodDescription;
            rhsCriterionRequirementPeriodDescription = that.getCriterionRequirementPeriodDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionRequirementPeriodDescription", lhsCriterionRequirementPeriodDescription), LocatorUtils.property(thatLocator, "criterionRequirementPeriodDescription", rhsCriterionRequirementPeriodDescription), lhsCriterionRequirementPeriodDescription, rhsCriterionRequirementPeriodDescription)) {
                return false;
            }
        }
        {
            TypeCodeType lhsCriterionRequirementEventTypeCode;
            lhsCriterionRequirementEventTypeCode = this.getCriterionRequirementEventTypeCode();
            TypeCodeType rhsCriterionRequirementEventTypeCode;
            rhsCriterionRequirementEventTypeCode = that.getCriterionRequirementEventTypeCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionRequirementEventTypeCode", lhsCriterionRequirementEventTypeCode), LocatorUtils.property(thatLocator, "criterionRequirementEventTypeCode", rhsCriterionRequirementEventTypeCode), lhsCriterionRequirementEventTypeCode, rhsCriterionRequirementEventTypeCode)) {
                return false;
            }
        }
        {
            DescriptionType lhsCriterionRequirementEventDescription;
            lhsCriterionRequirementEventDescription = this.getCriterionRequirementEventDescription();
            DescriptionType rhsCriterionRequirementEventDescription;
            rhsCriterionRequirementEventDescription = that.getCriterionRequirementEventDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criterionRequirementEventDescription", lhsCriterionRequirementEventDescription), LocatorUtils.property(thatLocator, "criterionRequirementEventDescription", rhsCriterionRequirementEventDescription), lhsCriterionRequirementEventDescription, rhsCriterionRequirementEventDescription)) {
                return false;
            }
        }
        {
            List<EvidenceType> lhsRequiredTypeOfEvidence;
            lhsRequiredTypeOfEvidence = (((this.requiredTypeOfEvidence!= null)&&(!this.requiredTypeOfEvidence.isEmpty()))?this.getRequiredTypeOfEvidence():null);
            List<EvidenceType> rhsRequiredTypeOfEvidence;
            rhsRequiredTypeOfEvidence = (((that.requiredTypeOfEvidence!= null)&&(!that.requiredTypeOfEvidence.isEmpty()))?that.getRequiredTypeOfEvidence():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requiredTypeOfEvidence", lhsRequiredTypeOfEvidence), LocatorUtils.property(thatLocator, "requiredTypeOfEvidence", rhsRequiredTypeOfEvidence), lhsRequiredTypeOfEvidence, rhsRequiredTypeOfEvidence)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            IDType theCriterionRequirementID;
            theCriterionRequirementID = this.getCriterionRequirementID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionRequirementID", theCriterionRequirementID), currentHashCode, theCriterionRequirementID);
        }
        {
            DescriptionType theCriterionRequirementDescription;
            theCriterionRequirementDescription = this.getCriterionRequirementDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionRequirementDescription", theCriterionRequirementDescription), currentHashCode, theCriterionRequirementDescription);
        }
        {
            TypeCodeType theCriterionRequirementAmountTypeCode;
            theCriterionRequirementAmountTypeCode = this.getCriterionRequirementAmountTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionRequirementAmountTypeCode", theCriterionRequirementAmountTypeCode), currentHashCode, theCriterionRequirementAmountTypeCode);
        }
        {
            DescriptionType theCriterionRequirementAmountDescription;
            theCriterionRequirementAmountDescription = this.getCriterionRequirementAmountDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionRequirementAmountDescription", theCriterionRequirementAmountDescription), currentHashCode, theCriterionRequirementAmountDescription);
        }
        {
            QuantityType theCriterionRequirementQuantityTypeCode;
            theCriterionRequirementQuantityTypeCode = this.getCriterionRequirementQuantityTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionRequirementQuantityTypeCode", theCriterionRequirementQuantityTypeCode), currentHashCode, theCriterionRequirementQuantityTypeCode);
        }
        {
            DescriptionType theCriterionRequirementQuantityDescription;
            theCriterionRequirementQuantityDescription = this.getCriterionRequirementQuantityDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionRequirementQuantityDescription", theCriterionRequirementQuantityDescription), currentHashCode, theCriterionRequirementQuantityDescription);
        }
        {
            TypeCodeType theCriterionRequirementPercentTypeCode;
            theCriterionRequirementPercentTypeCode = this.getCriterionRequirementPercentTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionRequirementPercentTypeCode", theCriterionRequirementPercentTypeCode), currentHashCode, theCriterionRequirementPercentTypeCode);
        }
        {
            DescriptionType theCriterionRequirementPercentDescription;
            theCriterionRequirementPercentDescription = this.getCriterionRequirementPercentDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionRequirementPercentDescription", theCriterionRequirementPercentDescription), currentHashCode, theCriterionRequirementPercentDescription);
        }
        {
            TypeCodeType theCriterionRequirementPeriodTypeCode;
            theCriterionRequirementPeriodTypeCode = this.getCriterionRequirementPeriodTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionRequirementPeriodTypeCode", theCriterionRequirementPeriodTypeCode), currentHashCode, theCriterionRequirementPeriodTypeCode);
        }
        {
            DescriptionType theCriterionRequirementPeriodDescription;
            theCriterionRequirementPeriodDescription = this.getCriterionRequirementPeriodDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionRequirementPeriodDescription", theCriterionRequirementPeriodDescription), currentHashCode, theCriterionRequirementPeriodDescription);
        }
        {
            TypeCodeType theCriterionRequirementEventTypeCode;
            theCriterionRequirementEventTypeCode = this.getCriterionRequirementEventTypeCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionRequirementEventTypeCode", theCriterionRequirementEventTypeCode), currentHashCode, theCriterionRequirementEventTypeCode);
        }
        {
            DescriptionType theCriterionRequirementEventDescription;
            theCriterionRequirementEventDescription = this.getCriterionRequirementEventDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criterionRequirementEventDescription", theCriterionRequirementEventDescription), currentHashCode, theCriterionRequirementEventDescription);
        }
        {
            List<EvidenceType> theRequiredTypeOfEvidence;
            theRequiredTypeOfEvidence = (((this.requiredTypeOfEvidence!= null)&&(!this.requiredTypeOfEvidence.isEmpty()))?this.getRequiredTypeOfEvidence():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requiredTypeOfEvidence", theRequiredTypeOfEvidence), currentHashCode, theRequiredTypeOfEvidence);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
