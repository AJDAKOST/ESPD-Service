//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.11 at 11:41:57 AM CET 
//


package grow.names.specification.ubl.schema.xsd.espd_commonaggregatecomponents_1;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import oasis.names.specification.ubl.schema.xsd.commonaggregatecomponents_2.PersonType;
import oasis.names.specification.ubl.schema.xsd.commonaggregatecomponents_2.PowerOfAttorneyType;
import oasis.names.specification.ubl.schema.xsd.commonbasiccomponents_2.TypeCodeType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for NaturalPersonType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="NaturalPersonType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{urn:grow:names:specification:ubl:schema:xsd:ESPD-CommonBasicComponents-1}NaturalPersonRoleCode" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:grow:names:specification:ubl:schema:xsd:ESPD-CommonBasicComponents-1}NaturalPersonRegistrationCountryCode" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2}Person"/&gt;
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2}PowerOfAttorney" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "NaturalPersonType", propOrder = {
    "naturalPersonRoleCode",
    "naturalPersonRegistrationCountryCode",
    "person",
    "powerOfAttorney"
})
public class NaturalPersonType
    implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 100L;
    @XmlElement(name = "NaturalPersonRoleCode", namespace = "urn:grow:names:specification:ubl:schema:xsd:ESPD-CommonBasicComponents-1")
    protected TypeCodeType naturalPersonRoleCode;
    @XmlElement(name = "NaturalPersonRegistrationCountryCode", namespace = "urn:grow:names:specification:ubl:schema:xsd:ESPD-CommonBasicComponents-1")
    protected TypeCodeType naturalPersonRegistrationCountryCode;
    @XmlElement(name = "Person", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2", required = true)
    protected PersonType person;
    @XmlElement(name = "PowerOfAttorney", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2")
    protected PowerOfAttorneyType powerOfAttorney;

    /**
     * Gets the value of the naturalPersonRoleCode property.
     * 
     * @return
     *     possible object is
     *     {@link TypeCodeType }
     *     
     */
    public TypeCodeType getNaturalPersonRoleCode() {
        return naturalPersonRoleCode;
    }

    /**
     * Sets the value of the naturalPersonRoleCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypeCodeType }
     *     
     */
    public void setNaturalPersonRoleCode(TypeCodeType value) {
        this.naturalPersonRoleCode = value;
    }

    /**
     * Gets the value of the naturalPersonRegistrationCountryCode property.
     * 
     * @return
     *     possible object is
     *     {@link TypeCodeType }
     *     
     */
    public TypeCodeType getNaturalPersonRegistrationCountryCode() {
        return naturalPersonRegistrationCountryCode;
    }

    /**
     * Sets the value of the naturalPersonRegistrationCountryCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypeCodeType }
     *     
     */
    public void setNaturalPersonRegistrationCountryCode(TypeCodeType value) {
        this.naturalPersonRegistrationCountryCode = value;
    }

    /**
     * Gets the value of the person property.
     * 
     * @return
     *     possible object is
     *     {@link PersonType }
     *     
     */
    public PersonType getPerson() {
        return person;
    }

    /**
     * Sets the value of the person property.
     * 
     * @param value
     *     allowed object is
     *     {@link PersonType }
     *     
     */
    public void setPerson(PersonType value) {
        this.person = value;
    }

    /**
     * Gets the value of the powerOfAttorney property.
     * 
     * @return
     *     possible object is
     *     {@link PowerOfAttorneyType }
     *     
     */
    public PowerOfAttorneyType getPowerOfAttorney() {
        return powerOfAttorney;
    }

    /**
     * Sets the value of the powerOfAttorney property.
     * 
     * @param value
     *     allowed object is
     *     {@link PowerOfAttorneyType }
     *     
     */
    public void setPowerOfAttorney(PowerOfAttorneyType value) {
        this.powerOfAttorney = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            TypeCodeType theNaturalPersonRoleCode;
            theNaturalPersonRoleCode = this.getNaturalPersonRoleCode();
            strategy.appendField(locator, this, "naturalPersonRoleCode", buffer, theNaturalPersonRoleCode);
        }
        {
            TypeCodeType theNaturalPersonRegistrationCountryCode;
            theNaturalPersonRegistrationCountryCode = this.getNaturalPersonRegistrationCountryCode();
            strategy.appendField(locator, this, "naturalPersonRegistrationCountryCode", buffer, theNaturalPersonRegistrationCountryCode);
        }
        {
            PersonType thePerson;
            thePerson = this.getPerson();
            strategy.appendField(locator, this, "person", buffer, thePerson);
        }
        {
            PowerOfAttorneyType thePowerOfAttorney;
            thePowerOfAttorney = this.getPowerOfAttorney();
            strategy.appendField(locator, this, "powerOfAttorney", buffer, thePowerOfAttorney);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof NaturalPersonType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final NaturalPersonType that = ((NaturalPersonType) object);
        {
            TypeCodeType lhsNaturalPersonRoleCode;
            lhsNaturalPersonRoleCode = this.getNaturalPersonRoleCode();
            TypeCodeType rhsNaturalPersonRoleCode;
            rhsNaturalPersonRoleCode = that.getNaturalPersonRoleCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "naturalPersonRoleCode", lhsNaturalPersonRoleCode), LocatorUtils.property(thatLocator, "naturalPersonRoleCode", rhsNaturalPersonRoleCode), lhsNaturalPersonRoleCode, rhsNaturalPersonRoleCode)) {
                return false;
            }
        }
        {
            TypeCodeType lhsNaturalPersonRegistrationCountryCode;
            lhsNaturalPersonRegistrationCountryCode = this.getNaturalPersonRegistrationCountryCode();
            TypeCodeType rhsNaturalPersonRegistrationCountryCode;
            rhsNaturalPersonRegistrationCountryCode = that.getNaturalPersonRegistrationCountryCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "naturalPersonRegistrationCountryCode", lhsNaturalPersonRegistrationCountryCode), LocatorUtils.property(thatLocator, "naturalPersonRegistrationCountryCode", rhsNaturalPersonRegistrationCountryCode), lhsNaturalPersonRegistrationCountryCode, rhsNaturalPersonRegistrationCountryCode)) {
                return false;
            }
        }
        {
            PersonType lhsPerson;
            lhsPerson = this.getPerson();
            PersonType rhsPerson;
            rhsPerson = that.getPerson();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "person", lhsPerson), LocatorUtils.property(thatLocator, "person", rhsPerson), lhsPerson, rhsPerson)) {
                return false;
            }
        }
        {
            PowerOfAttorneyType lhsPowerOfAttorney;
            lhsPowerOfAttorney = this.getPowerOfAttorney();
            PowerOfAttorneyType rhsPowerOfAttorney;
            rhsPowerOfAttorney = that.getPowerOfAttorney();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "powerOfAttorney", lhsPowerOfAttorney), LocatorUtils.property(thatLocator, "powerOfAttorney", rhsPowerOfAttorney), lhsPowerOfAttorney, rhsPowerOfAttorney)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            TypeCodeType theNaturalPersonRoleCode;
            theNaturalPersonRoleCode = this.getNaturalPersonRoleCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "naturalPersonRoleCode", theNaturalPersonRoleCode), currentHashCode, theNaturalPersonRoleCode);
        }
        {
            TypeCodeType theNaturalPersonRegistrationCountryCode;
            theNaturalPersonRegistrationCountryCode = this.getNaturalPersonRegistrationCountryCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "naturalPersonRegistrationCountryCode", theNaturalPersonRegistrationCountryCode), currentHashCode, theNaturalPersonRegistrationCountryCode);
        }
        {
            PersonType thePerson;
            thePerson = this.getPerson();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "person", thePerson), currentHashCode, thePerson);
        }
        {
            PowerOfAttorneyType thePowerOfAttorney;
            thePowerOfAttorney = this.getPowerOfAttorney();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "powerOfAttorney", thePowerOfAttorney), currentHashCode, thePowerOfAttorney);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
